@startuml updateRobotSD
autonumber

skinparam sequence {
ParticipantBorderColor black
ParticipantBackgroundColor white
}


!pragma teoz true
box "<<System(C4)>>\n RobDroneGo" #LightSkyBlue
    box "<<Container(C4)>>\n Fleet Management" #LightGreen

        box "<<Component(C4)>>\nInterface Adapter Layer" #Cyan
            participant IRobotController as  ICTL <<Component(C4)>>
            participant RobotController as  CTL <<Component(C4)>>
            participant RobotRepository as  DR <<Component(C4)>>
        end box
        box "<<Component(C4)>>\nApplication Services Layer" #Red
            participant RobotService as  SV <<Component(C4)>>
            participant IRobotService as  ISV <<Component(C4)>>
            participant IRobotRepo as  IER <<Component(C4)>>
        end box
        box "<<Component(C4)>>\nEntities\Core\Domanin Layer" #Yellow
            participant "Robot : Robot" as  Robot <<Component(C4)>>
        end box
    participant "RobotDTO : RobotDTO" as  DTO <<Component(C4)>>

    end box
end box


 -> CTL: PUT Put(RobotDto)
 activate CTL
alt If the Robot exists in the system


    CTL -> SV : UpdatingRobot(RobotDto)
    activate SV
    

    SV -> DR: GetByID(RobotId)
    activate DR
    DR --> SV: Robot
    deactivate DR

    SV -> Robot : Update(RobotDTO)
    activate Robot
    Robot --> SV : Robot
    deactivate Robot

    SV -> DR : save(Robot)
    activate DR
    DR --> SV : true
     deactivate DR
    SV -> DTO : toRobotDTO(Robot)
    activate DTO
    DTO -> DTO: toDTO(Robot)
    
    DTO --> SV : RobotDTO
    deactivate DTO
    SV -> CTL : RobotDTO
    deactivate SV
     <-- CTL : RobotDto + 200 OK
     deactivate CTL




else If a Robot already exists with the id entered




CTL -> SV : CreateRobot(RobotDto)
activate CTL
activate SV

SV -> Robot : Create(RobotDto)
activate Robot
Robot --> SV : Robot
deactivate Robot

SV -> DR : save(Robot)
activate DR
DR --> SV : false
deactivate DR
SV --> CTL : BadRequestException
deactivate SV
 <-- CTL : BadRequestException


 <-- CTL: 400 BAD REQUEST
deactivate CTL




else If the attributes do not respect the business rules


CTL -> SV : CreateRobot(RobotDto)
activate CTL
activate SV

SV -> Robot : Create(RobotDto)
activate Robot
Robot --> SV : BusinessRuleValidationException
deactivate Robot

SV --> CTL : BusinessRuleValidationException
deactivate SV
 <-- CTL : BusinessRuleValidationException

 <-- CTL: 400 BAD REQUEST
deactivate CTL


end

@enduml